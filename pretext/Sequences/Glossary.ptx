<?xml version="1.0"?>
<section xml:id="strings_glossary">
  <title>Glossary</title>
  <glossary sorted="False">
    <gi>
      <title>collection data type</title>
      <p>A data type in which the values are made up of components, or elements,
                            that are themselves values.</p>
    </gi>
    <gi>
      <title>default value</title>
      <p>The value given to an optional parameter if no argument for it is
                            provided in the function call.</p>
    </gi>
    <gi>
      <title>dot notation</title>
      <p>Use of the <term>dot operator</term>, <c>.</c>, to access functions inside a
                            module, or to access methods and attributes of an object.</p>
    </gi>
    <gi>
      <title>immutable data type</title>
      <p>A data type whose values cannot be changed. Modifying functions create
                            a totally new object that does not change the original one.</p>
    </gi>
    <gi>
      <title>index</title>
      <p>A variable or value used to select a member of an ordered collection, such as
                            a character from a string, or an element from a list.</p>
    </gi>
    <gi>
      <title>indexing (<c>[]</c>)</title>
      <p>Access a single character in a string using its position (starting from
                            0).  Example: <c>'This'[2]</c> evaluates to <c>'i'</c>.</p>
    </gi>
    <gi>
      <title>length</title>
      <p>Number of characters in a string. It can be found by  (<c>len</c>) function Example:
                            <c>len('happy')</c> evaluates to <c>5</c>.</p>
    </gi>
    <gi>
      <title>optional parameter</title>
      <p>A parameter written in a function header with an assignment to a
                            default value which it will receive if no corresponding argument is
                            given for it in the function call.</p>
    </gi>
    <gi>
      <title>slice</title>
      <p>A part of a string (substring) specified by a range of indices. More
                            generally, a subsequence of any sequence type in Python can be created
                            using the slice operator (<c>sequence[start:stop]</c>). Example: <c>'bananas and
cream'[3:6]</c> evaluates to <c>ana</c> (so does <c>'bananas and cream'[1:4]</c>).</p>

    </gi>

    <gi>
      <title>whitespace</title>
      <p>Any of the characters that move the cursor without printing visible
                            characters. The constant <c>string.whitespace</c> contains all the
                            white-space characters.</p>
    </gi>
  </glossary>
</section>
