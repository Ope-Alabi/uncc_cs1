<<<<<<< HEAD:pretext/Lists/NestedLists.ptx
<?xml version="1.0"?>
<section xml:id="lists_nested-lists">
  <title>Nested Lists</title>
  <p>A nested list is a list that appears as an element in another list. In this
            list, the element with index 3 is a nested list.
            If we print(<c>nested[3]</c>), we get <c>[10, 20]</c>. To extract an element from the
            nested list, we can proceed in two steps.  First, extract the nested list, then extract the item
            of interest.  It is also possible to combine those steps using bracket operators that evaluate from
            left to right.</p>
  <program xml:id="chp09_nest" interactive="activecode" language="python">
    <input>
nested = ["hello", 2.0, 5, [10, 20]]
innerlist = nested[3]
print(innerlist)
item = innerlist[1]
print(item)

print(nested[3][1])
        </input>
  </program>
  <p xml:id="lists_index-0">
    <term>Check your understanding</term>
  </p>
  <exercise label="test_question9_21_1">
    <statement>
      <p>What is printed by the following statements?</p>
      <program language="python">
        <input>
alist = [ [4, [True, False], 6, 8], [888, 999] ]
if alist[0][1][0]:
   print(alist[1][0])
else:
   print(alist[1][1])
</input>
      </program>
    </statement>
    <choices>
      <choice>
        <statement>
          <p>6</p>
        </statement>
        <feedback><p>
                    6 is in the wrong list.  alist[1] refers to the second item in alist, namely [888,999].
                </p></feedback>
      </choice>
      <choice>
        <statement>
          <p>8</p>
        </statement>
        <feedback><p>
                    8 is in the wrong list.  alist[1] refers to the second item in alist, namely [888,999].
                </p></feedback>
      </choice>
      <choice correct="yes">
        <statement>
          <p>888</p>
        </statement>
        <feedback><p>
                    Yes, alist[0][1][0] is True and alist[1] is the second list, the first item is 888.
                </p></feedback>
      </choice>
      <choice>
        <statement>
          <p>999</p>
        </statement>
        <feedback><p>
                    alist[0][1][0] is True.  Take another look at the if statement.
                </p></feedback>
      </choice>
    </choices>
  </exercise>
</section>
=======
<?xml version="1.0"?>
<section xml:id="complex-logic_nested-lists">
  <title>Nested Lists</title>
  <p>A nested list is a list that appears as an element in another list. In this
            list, the element with index 3 is a nested list.
            If we print(<c>nested[3]</c>), we get <c>[10, 20]</c>. To extract an element from the
            nested list, we can proceed in two steps.  First, extract the nested list, then extract the item
            of interest.  It is also possible to combine those steps using bracket operators that evaluate from
            left to right.</p>
  <program xml:id="ch10_sec2_p1" interactive="activecode" language="python">
    <input>
nested = ["hello", 2.0, 5, [10, 20]]
innerlist = nested[3]
print(innerlist)
item = innerlist[1]
print(item)

print(nested[3][1])
        </input>
  </program>
  <p xml:id="complex-logic_index-0">
    <term>Check your understanding</term>
  </p>
  <exercise label="ch10_sec2_q1">
    <statement>
      <p>What is printed by the following statements?</p>
      <program language="python">
        <input>
alist = [ [4, [True, False], 6, 8], [888, 999] ]
if alist[0][1][0]:
   print(alist[1][0])
else:
   print(alist[1][1])
</input>
      </program>
    </statement>
    <choices>
      <choice>
        <statement>
          <p>6</p>
        </statement>
        <feedback>
                    6 is in the wrong list.  alist[1] refers to the second item in alist, namely [888,999].
                </feedback>
      </choice>
      <choice>
        <statement>
          <p>8</p>
        </statement>
        <feedback>
                    8 is in the wrong list.  alist[1] refers to the second item in alist, namely [888,999].
                </feedback>
      </choice>
      <choice correct="yes">
        <statement>
          <p>888</p>
        </statement>
        <feedback>
                    Yes, alist[0][1][0] is True and alist[1] is the second list, the first item is 888.
                </feedback>
      </choice>
      <choice>
        <statement>
          <p>999</p>
        </statement>
        <feedback>
                    alist[0][1][0] is True.  Take another look at the if statement.
                </feedback>
      </choice>
    </choices>
  </exercise>
</section>
>>>>>>> 6b21168b0c3243abea66db80c0bd38b03afc202f:pretext/ComplexLogic/NestedLists.ptx
