<?xml version="1.0"?>
<section xml:id="files_iterating-over-lines-in-a-file">
  <title>Iterating over lines in a file</title>

  <p>We will now use this file as input in a program that will do some data
            processing. In the program, we will <term>read</term> each line of the file and
            print it with some additional text. Because <code>readlines()</code> returns a list of lines of text, we can use the <em>for</em> loop to iterate through each line of
            the file.</p>
  <p>A <term>line</term> of a file is defined to be a sequence of characters up to and
            including a special character called the <term>newline</term> character. If you
            evaluate a string that contains a newline character you will see the
            character represented as <c>\n</c>. If you print a string that contains a
            newline you will not see the <c>\n</c>, you will just see its effects. When
            you are typing a Python program and you press the enter or return key on
            your keyboard, the editor inserts a newline character into your text at
            that point.</p>
  <p>As the <em>for</em> loop iterates through each line of the file the loop
            variable will contain the current line of the file as a string of
            characters. The general pattern for processing each line of a text file
            is as follows:</p>

    <program language="python">
      <input>
          for line in myFile.readlines():
            statement1
            statement2
      </input>
    </program>

  <p>To process all of our climate change data, we will use a <em>for</em> loop to iterate over the lines of the file. Using
            the <c>split</c> method, we can break each line into a list containing all the fields of interest about climate
            change. We can then take the values corresponding to year, global average temperature, and global emmisions to
            construct a simple sentence.</p>

  <datafile label="olympics_file_iterating_over_lines" filename="olympics.txt" rows="10" cols="6" editable="no" hide="yes"> 
    <pre>
      Name,Sex,Age,Team,Event,Medal
      A Dijiang,M,24,China,Basketball,NA
      A Lamusi,M,23,China,Judo,NA
      Gunnar Nielsen Aaby,M,24,Denmark,Football,NA
      Edgar Lindenau Aabye,M,34,Denmark/Sweden,Tug-Of-War,Gold
      Christine Jacoba Aaftink,F,21,Netherlands,Speed Skating,NA
      Christine Jacoba Aaftink,F,21,Netherlands,Speed Skating,NA
      Christine Jacoba Aaftink,F,25,Netherlands,Speed Skating,NA
      Christine Jacoba Aaftink,F,25,Netherlands,Speed Skating,NA
      Christine Jacoba Aaftink,F,27,Netherlands,Speed Skating,NA
      Christine Jacoba Aaftink,F,27,Netherlands,Speed Skating,NA
      Per Knut Aaland,M,31,United States,Cross Country Skiing,NA
      Per Knut Aaland,M,31,United States,Cross Country Skiing,NA
      Per Knut Aaland,M,31,United States,Cross Country Skiing,NA
      Per Knut Aaland,M,31,United States,Cross Country Skiing,NA
      Per Knut Aaland,M,33,United States,Cross Country Skiing,NA
      Per Knut Aaland,M,33,United States,Cross Country Skiing,NA
      Per Knut Aaland,M,33,United States,Cross Country Skiing,NA
      Per Knut Aaland,M,33,United States,Cross Country Skiing,NA
      John Aalberg,M,31,United States,Cross Country Skiing,NA
      John Aalberg,M,31,United States,Cross Country Skiing,NA
      John Aalberg,M,31,United States,Cross Country Skiing,NA
      John Aalberg,M,31,United States,Cross Country Skiing,NA
      John Aalberg,M,33,United States,Cross Country Skiing,NA
      John Aalberg,M,33,United States,Cross Country Skiing,NA
      John Aalberg,M,33,United States,Cross Country Skiing,NA
      John Aalberg,M,33,United States,Cross Country Skiing,NA
      "Cornelia ""Cor"" Aalten (-Strannood)",F,18,Netherlands,Athletics,NA
      "Cornelia ""Cor"" Aalten (-Strannood)",F,18,Netherlands,Athletics,NA
      Antti Sami Aalto,M,26,Finland,Ice Hockey,NA
      "Einar Ferdinand ""Einari"" Aalto",M,26,Finland,Swimming,NA
      Jorma Ilmari Aalto,M,22,Finland,Cross Country Skiing,NA
      Jyri Tapani Aalto,M,31,Finland,Badminton,NA
      Minna Maarit Aalto,F,30,Finland,Sailing,NA
      Minna Maarit Aalto,F,34,Finland,Sailing,NA
      Pirjo Hannele Aalto (Mattila-),F,32,Finland,Biathlon,NA
      Arvo Ossian Aaltonen,M,22,Finland,Swimming,NA
      Arvo Ossian Aaltonen,M,22,Finland,Swimming,NA
      Arvo Ossian Aaltonen,M,30,Finland,Swimming,Bronze
      Arvo Ossian Aaltonen,M,30,Finland,Swimming,Bronze
      Arvo Ossian Aaltonen,M,34,Finland,Swimming,NA
      Juhamatti Tapio Aaltonen,M,28,Finland,Ice Hockey,Bronze
      Paavo Johannes Aaltonen,M,28,Finland,Gymnastics,Bronze
      Paavo Johannes Aaltonen,M,28,Finland,Gymnastics,Gold
      Paavo Johannes Aaltonen,M,28,Finland,Gymnastics,NA
      Paavo Johannes Aaltonen,M,28,Finland,Gymnastics,Gold
      Paavo Johannes Aaltonen,M,28,Finland,Gymnastics,NA
      Paavo Johannes Aaltonen,M,28,Finland,Gymnastics,NA
      Paavo Johannes Aaltonen,M,28,Finland,Gymnastics,NA
      Paavo Johannes Aaltonen,M,28,Finland,Gymnastics,Gold
      Paavo Johannes Aaltonen,M,32,Finland,Gymnastics,NA
      Paavo Johannes Aaltonen,M,32,Finland,Gymnastics,Bronze
      Paavo Johannes Aaltonen,M,32,Finland,Gymnastics,NA
      Paavo Johannes Aaltonen,M,32,Finland,Gymnastics,NA
      Paavo Johannes Aaltonen,M,32,Finland,Gymnastics,NA
      Paavo Johannes Aaltonen,M,32,Finland,Gymnastics,NA
      Paavo Johannes Aaltonen,M,32,Finland,Gymnastics,NA
      Paavo Johannes Aaltonen,M,32,Finland,Gymnastics,NA
      Timo Antero Aaltonen,M,31,Finland,Athletics,NA
      Win Valdemar Aaltonen,M,54,Finland,Art Competitions,NA
    </pre>
  </datafile>

  <program xml:id="ac_iteratingOverLinesInAFile_1" label="ac_iteratingOverLinesInAFile_1" interactive="activecode" language="python" datafile="olympics.txt">
    <input>
    olympicsfile = open("olympics.txt", "r")

    for aline in olympicsfile.readlines():
        values = aline.split(",")
        print(values[0], "is from", values[3], "and is on the roster for", values[4])

    olympicsfile.close()

        </input>
  </program>
  <note>
    <p>You can obtain a line from the keyboard with the <c>input</c> function, and you can process lines of a file.
                However <q>line</q> is used differently:  With <c>input</c> Python reads through the newline you enter from the keyboard,
                but the newline (<c>'\n'</c>) is <em>not</em> included in the line returned by <c>input</c>. It is dropped.
                When a line is taken from a file, the terminating newline <em>is</em> included as the last character (unless you
                are reading the final line of a file that happens to not have a newline at the end).</p>
  </note>
  <p>To make the code a little simpler, and to allow for more efficient processing, Python provides a built-in way to iterate through the contents of a file one line at a time, without first reading them all into a list. Some students find this confusing initially, so we donâ€™t recommend doing it this way, until you get a little more comfortable with Python. But this idiom is preferred by Python programmers, so you should be prepared to read it. And when you start dealing with big files, you may notice the efficiency gains of using it.</p>
  <program xml:id="ac_iteratingOverLinesInAFile_2" label="ac_iteratingOverLinesInAFile_2" interactive="activecode" language="python" datafile="olympics.txt">
    <input>
    olympicsfile = open("olympics.txt", "r")

    for aline in olympicsfile:
        values = aline.split(",")
        print(values[0], "is from", values[3], "and is on the roster for", values[4])

    olympicsfile.close()

        </input>
  </program>

<p><term>Check your Understanding</term></p>

    <program language="english">
        <input>
            Sad upset blue down melancholy somber bitter troubled
            Angry mad enraged irate irritable wrathful outraged infuriated
            Happy cheerful content elated joyous delighted lively glad
            Confused disoriented puzzled perplexed dazed befuddled
            Excited eager thrilled delighted
            Scared afraid fearful panicked terrified petrified startled
            Nervous anxious jittery jumpy tense uneasy apprehensive
        </input>
    </program>

    <exercise label="mc_iteratingOverLinesInAFile_1">
      <statement>
        <p>1. Write code to find out how many lines are in the file <c>emotion_words.txt</c> as shown above. Save this value to the variable <c>num_lines</c>. Do not use the len method.</p>
      </statement>
      <program xml:id="ac_iteratingOverLinesInAFile_3" label="ac_iteratingOverLinesInAFile_3" interactive="activecode" language="python" datafile="emotion_words.txt">
        <input>
            
        </input>
      </program>
    </exercise>



  <datafile label="emotion_iterating_sec" filename="emotion_words2.txt" rows="10" cols="6" editable="no" hide="yes"> 
    <pre>
      Sad upset blue down melancholy somber bitter troubled
      Angry mad enraged irate irritable wrathful outraged infuriated
      Happy cheerful content elated joyous delighted lively glad
      Confused disoriented puzzled perplexed dazed befuddled
      Excited eager thrilled delighted
      Scared afraid fearful panicked terrified petrified startled
      Nervous anxious jittery jumpy tense uneasy apprehensive
    </pre>
  </datafile>

</section>
