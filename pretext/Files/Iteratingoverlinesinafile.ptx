<?xml version="1.0"?>
<section xml:id="files_iterating-over-lines-in-a-file">
  <title>Iterating over lines in a file</title>

  <p>We will now use this file as input in a program that will do some data
            processing. In the program, we will <term>read</term> each line of the file and
            print it with some additional text. Because <code>readlines()</code> returns a list of lines of text, we can use the <em>for</em> loop to iterate through each line of
            the file.</p>
  <p>A <term>line</term> of a file is defined to be a sequence of characters up to and
            including a special character called the <term>newline</term> character. If you
            evaluate a string that contains a newline character you will see the
            character represented as <c>\n</c>. If you print a string that contains a
            newline you will not see the <c>\n</c>, you will just see its effects. When
            you are typing a Python program and you press the enter or return key on
            your keyboard, the editor inserts a newline character into your text at
            that point.</p>
  <p>As the <em>for</em> loop iterates through each line of the file the loop
            variable will contain the current line of the file as a string of
            characters. The general pattern for processing each line of a text file
            is as follows:</p>

    <program language="python">
      <input>
          for line in myFile.readlines():
            statement1
            statement2
      </input>
    </program>

  <p>To process all of our climate change data, we will use a <em>for</em> loop to iterate over the lines of the file. Using
            the <c>split</c> method, we can break each line into a list containing all the fields of interest about climate
            change. We can then take the values corresponding to year, global average temperature, and global emmisions to
            construct a simple sentence.</p>

  <datafile source="/Users/oalabi1/Library/CloudStorage/OneDrive-UniversityofNorthCarolinaatCharlotte/Personal Projects/uncc_cs1/pretext/Files/olympics.txt" filename="olympics.txt"/>

  <program xml:id="ch11_sec4_p1" interactive="activecode" language="python" datafile="olympics.txt">
    <input>
    olympicsfile = open("olympics.txt", "r")

    for aline in olympicsfile.readlines():
        values = aline.split(",")
        print(values[0], "is from", values[3], "and is on the roster for", values[4])

    olympicsfile.close()


        </input>
  </program>
  <note>
    <p>You can obtain a line from the keyboard with the <c>input</c> function, and you can process lines of a file.
                However <q>line</q> is used differently:  With <c>input</c> Python reads through the newline you enter from the keyboard,
                but the newline (<c>'\n'</c>) is <em>not</em> included in the line returned by <c>input</c>. It is dropped.
                When a line is taken from a file, the terminating newline <em>is</em> included as the last character (unless you
                are reading the final line of a file that happens to not have a newline at the end).</p>
  </note>
  <p>To make the code a little simpler, and to allow for more efficient processing, Python provides a built-in way to iterate through the contents of a file one line at a time, without first reading them all into a list. Some students find this confusing initially, so we donâ€™t recommend doing it this way, until you get a little more comfortable with Python. But this idiom is preferred by Python programmers, so you should be prepared to read it. And when you start dealing with big files, you may notice the efficiency gains of using it.</p>
  <program xml:id="ch11_sec4_p2" interactive="activecode" language="python" datafile="olympics.txt">
    <input>
    olympicsfile = open("olympics.txt", "r")

    for aline in olympicsfile:
        values = aline.split(",")
        print(values[0], "is from", values[3], "and is on the roster for", values[4])

    olympicsfile.close()

        </input>
  </program>

</section>
