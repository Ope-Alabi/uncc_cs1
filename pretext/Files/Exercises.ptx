<?xml version="1.0"?>
<exercises xml:id="files_exercises">
  <title>Practice Zone</title>
  <datafile label="studentdata" filename="studentdata.txt" rows="5" cols="6" editable="no" hide="yes"> 
    <pre>
      joe 10 15 20 30 40
      bill 23 16 19 22
      sue 8 22 17 14 32 17 24 21 2 9 11 17
      grace 12 28 21 45 26 10
      john 14 32 25 16 89
    </pre>
  </datafile>
  <exercise label="pz_files_1">
    <statement>
      <p>The following sample file called <c>studentdata.txt</c> contains one line for each student in an imaginary class.  The
                        student's name is the first thing on each line, followed by some exam scores.
                        The number of scores might be different for each student.</p>
      <!-- <DataFileNode line="28" runestone_options="{'subchapter': 'Exercises', 'chapter': 'Files', 'basecourse': 'thinkcspy', 'optional': '', 'optclass': '', 'divid': 'studentdata.txt', 'qnumber': '', 'cols': 36, 'rows': 20, 'filecontent': 'joe 10 15 20 30 40\nbill 23 16 19 22\nsue 8 22 17 14 32 17 24 21 2 9 11 17\ngrace 12 28 21 45 26 10\njohn 14 32 25 16 89\n', 'hidden': '', 'edit': 'false', 'question_label': '11.10.3'}" source="/Users/bmiller/Runestone/books/thinkcspy/_sources/Files/Exercises.rst">
                    </DataFileNode> -->
      <p>Using the text file <c>studentdata.txt</c> write a program that prints out the names of
                        students that have more than six quiz scores.</p>
    </statement>

    
    <program interactive="activecode" language="python" xml:id="ac_pz_files_1" label="ac_pz_files_1">
      <input>

        </input>
    </program>
    <solution>
      <program xml:id="ch_files_q1answer" language="python">
        <input>
f = open("studentdata.txt", "r")

for aline in f:
    items = aline.split()
    if len(items[1:]) &gt; 6:
        print(items[0])

f.close()
        </input>
      </program>
    </solution>
  </exercise>
  <exercise label="pz_files_2">
    <statement>
      <p>Using the text file <c>studentdata.txt</c> (shown in exercise 1) write a program that calculates the average grade
                for each student, and print out the student's name along with their average grade.</p>
    </statement>
    <program xml:id="ac_pz_files_2" label="ac_pz_files_2" interactive="activecode" language="python">
      <input>

        </input>
    </program>
  </exercise>
  <exercise label="pz_files_3">
    <statement>
      <p>Using the text file <c>studentdata.txt</c> (shown in exercise 1) write a program that calculates the minimum and
                        maximum score for each student.  Print out their name as well.</p>
    </statement>
    <program interactive="activecode" language="python" xml:id="ac_pz_files_3" label="ac_pz_files_3">
      <input>

        </input>
    </program>
    <solution>
      <program xml:id="ch_files_q3answer" language="python">
        <input>
f = open("studentdata.txt", "r")

for aline in f:
    items = aline.split()
    for i in range(len(items[1:])):
        #converting scores from strings to integers
        items[i+1] = int(items[i+1]
    print(items[0], "max is", max(items[1:]), "min is", min(items[1:]))

f.close()
        </input>
      </program>
    </solution>
  </exercise>
</exercises>
